#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassScreen

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePassScreen.BattlePassScreen_C
// 0x0140 (0x09C8 - 0x0888)
class UBattlePassScreen_C final : public UBattlePassScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0888(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowVariantLabel;                                  // 0x0890(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideRightSideActionButtons_2;                      // 0x0898(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RevealRightSideActionButtons;                      // 0x08A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SeasonInformation;                                 // 0x08A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RightFriendCountCollapse;                          // 0x08B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LeftFriendCountCollapse;                           // 0x08B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnViewReward;                                      // 0x08C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               AdditionalStyles;                                  // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnnualPassAccountFlair_C*              AnnualPassAccountFlair;                            // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              BackButton_SZ;                                     // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DetailsContainer;                                  // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         EndingDate;                                        // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FakeHackGradient;                                  // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              ItemDetails_SZ;                                    // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ItemDetailsContainer;                              // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              LeftCounter_SZ;                                    // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftCounterPointer;                                // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftCounterPortrait;                               // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LeftFriendCounter;                                 // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_DoesNotOwnBattlePassContainer;             // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OwnsBattlePassContainer;                           // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RewardListContainer;                               // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              RightCounter_SZ;                                   // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightCounterPointer;                               // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightCounterPortrait;                              // 0x0950(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RightFriendCounter;                                // 0x0958(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SeasonDetails_SZ;                                  // 0x0960(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SeasonDetailsContainer;                            // 0x0968(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SetItems_SZ;                                       // 0x0970(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TrackViewContainer;                                // 0x0978(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          VariantLabel;                                      // 0x0980(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VariantUnlockPreviewSet;                           // 0x0988(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bOwnsBattlePass;                                   // 0x0990(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991[0x7];                                      // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActivatableMovieWidget_C*              ActivatableMovieWidget;                            // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortStreamMediaSource*                 ElectraMediaSource;                                // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StreamedVideoOpeningTimer;                         // 0x09A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           StreamedMediaPlayer;                               // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StreamedVideoPlayingTimer;                         // 0x09B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnimateRewardTimeline;                            // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RightSideActionsHidden;                            // 0x09C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoPlayVideo;                                     // 0x09C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void RevealRightSideActions();
	void HideRightSideActions();
	void HandleShowVariantCycleLabel(bool bShowCycleLabel);
	void HandleOffscreenIndicatorAnimations(int32 LeftFriendCount, int32 RightFriendCount);
	void HandleRewardTimelineAnimation(bool bAnimateRewardTimeline_0);
	void HandleWatchVideoRequest(bool PlayFromDisc);
	void HandleViewReward(bool bInNoReward, int32 InNumRewardsToPurchase);
	void HandleOnViewReward(const struct FFortRarityItemData& Rarity, bool bNoReward, int32 NumRewardsToPurchase);
	void OnSetupPurchaseSeasonLevel(const TMap<int32, class UFortSeasonPassLevelInfo*>& SeasonLevelInfos, class UAthenaSeasonItemDefinition* CurrentSeasonData, class UFortSeasonPassLevelInfo* CurrentLevel, int32 MaxLevelToPurchase, int32 LevelToBePurchased);
	void HandleOnUpdatedVisibleFriendCount(int32 LeftFriendCount, int32 RightFriendCount);
	void OnHandleReplayCinematic();
	void OnHandleAboutBattlePass();
	void OnHandleWatchVideo();
	void BP_OnActivated();
	void OnHandleViewAllRewards();
	void OnRequestViewReward();
	void OnRequestViewRewardComplete();
	void OnVariantUpdate(int32 CurrentIndex, int32 TotalNumVariants);
	void OnBattlePassViewChanged(EBattlePassView NewView);
	void OnSetGiftButtonLabel(const class FText& MainLabel, const class FText& PriceText);
	void OnSetPurchasedAnnualPass(bool bIsPurchased);
	void ExecuteUbergraph_BattlePassScreen(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePassScreen_C">();
	}
	static class UBattlePassScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassScreen_C>();
	}
};
static_assert(alignof(UBattlePassScreen_C) == 0x000008, "Wrong alignment on UBattlePassScreen_C");
static_assert(sizeof(UBattlePassScreen_C) == 0x0009C8, "Wrong size on UBattlePassScreen_C");
static_assert(offsetof(UBattlePassScreen_C, UberGraphFrame) == 0x000888, "Member 'UBattlePassScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, ShowVariantLabel) == 0x000890, "Member 'UBattlePassScreen_C::ShowVariantLabel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, HideRightSideActionButtons_2) == 0x000898, "Member 'UBattlePassScreen_C::HideRightSideActionButtons_2' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RevealRightSideActionButtons) == 0x0008A0, "Member 'UBattlePassScreen_C::RevealRightSideActionButtons' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, SeasonInformation) == 0x0008A8, "Member 'UBattlePassScreen_C::SeasonInformation' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RightFriendCountCollapse) == 0x0008B0, "Member 'UBattlePassScreen_C::RightFriendCountCollapse' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, LeftFriendCountCollapse) == 0x0008B8, "Member 'UBattlePassScreen_C::LeftFriendCountCollapse' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, OnViewReward) == 0x0008C0, "Member 'UBattlePassScreen_C::OnViewReward' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, AdditionalStyles) == 0x0008C8, "Member 'UBattlePassScreen_C::AdditionalStyles' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, AnnualPassAccountFlair) == 0x0008D0, "Member 'UBattlePassScreen_C::AnnualPassAccountFlair' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, BackButton_SZ) == 0x0008D8, "Member 'UBattlePassScreen_C::BackButton_SZ' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, DetailsContainer) == 0x0008E0, "Member 'UBattlePassScreen_C::DetailsContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, EndingDate) == 0x0008E8, "Member 'UBattlePassScreen_C::EndingDate' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, FakeHackGradient) == 0x0008F0, "Member 'UBattlePassScreen_C::FakeHackGradient' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, ItemDetails_SZ) == 0x0008F8, "Member 'UBattlePassScreen_C::ItemDetails_SZ' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, ItemDetailsContainer) == 0x000900, "Member 'UBattlePassScreen_C::ItemDetailsContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, LeftCounter_SZ) == 0x000908, "Member 'UBattlePassScreen_C::LeftCounter_SZ' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, LeftCounterPointer) == 0x000910, "Member 'UBattlePassScreen_C::LeftCounterPointer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, LeftCounterPortrait) == 0x000918, "Member 'UBattlePassScreen_C::LeftCounterPortrait' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, LeftFriendCounter) == 0x000920, "Member 'UBattlePassScreen_C::LeftFriendCounter' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, Overlay_DoesNotOwnBattlePassContainer) == 0x000928, "Member 'UBattlePassScreen_C::Overlay_DoesNotOwnBattlePassContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, OwnsBattlePassContainer) == 0x000930, "Member 'UBattlePassScreen_C::OwnsBattlePassContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RewardListContainer) == 0x000938, "Member 'UBattlePassScreen_C::RewardListContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RightCounter_SZ) == 0x000940, "Member 'UBattlePassScreen_C::RightCounter_SZ' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RightCounterPointer) == 0x000948, "Member 'UBattlePassScreen_C::RightCounterPointer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RightCounterPortrait) == 0x000950, "Member 'UBattlePassScreen_C::RightCounterPortrait' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RightFriendCounter) == 0x000958, "Member 'UBattlePassScreen_C::RightFriendCounter' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, SeasonDetails_SZ) == 0x000960, "Member 'UBattlePassScreen_C::SeasonDetails_SZ' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, SeasonDetailsContainer) == 0x000968, "Member 'UBattlePassScreen_C::SeasonDetailsContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, SetItems_SZ) == 0x000970, "Member 'UBattlePassScreen_C::SetItems_SZ' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, TrackViewContainer) == 0x000978, "Member 'UBattlePassScreen_C::TrackViewContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, VariantLabel) == 0x000980, "Member 'UBattlePassScreen_C::VariantLabel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, VariantUnlockPreviewSet) == 0x000988, "Member 'UBattlePassScreen_C::VariantUnlockPreviewSet' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, bOwnsBattlePass) == 0x000990, "Member 'UBattlePassScreen_C::bOwnsBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, ActivatableMovieWidget) == 0x000998, "Member 'UBattlePassScreen_C::ActivatableMovieWidget' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, ElectraMediaSource) == 0x0009A0, "Member 'UBattlePassScreen_C::ElectraMediaSource' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, StreamedVideoOpeningTimer) == 0x0009A8, "Member 'UBattlePassScreen_C::StreamedVideoOpeningTimer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, StreamedMediaPlayer) == 0x0009B0, "Member 'UBattlePassScreen_C::StreamedMediaPlayer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, StreamedVideoPlayingTimer) == 0x0009B8, "Member 'UBattlePassScreen_C::StreamedVideoPlayingTimer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, bAnimateRewardTimeline) == 0x0009C0, "Member 'UBattlePassScreen_C::bAnimateRewardTimeline' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, RightSideActionsHidden) == 0x0009C1, "Member 'UBattlePassScreen_C::RightSideActionsHidden' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_C, AutoPlayVideo) == 0x0009C2, "Member 'UBattlePassScreen_C::AutoPlayVideo' has a wrong offset!");

}

