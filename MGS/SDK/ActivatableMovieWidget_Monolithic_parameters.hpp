#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivatableMovieWidget_Monolithic

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.LoadFallbackVideo
// 0x0001 (0x0001 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo final
{
public:
	bool                                          CallFunc_LoadVideo_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo) == 0x000001, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo) == 0x000001, "Wrong size on ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo, CallFunc_LoadVideo_ReturnValue) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_LoadFallbackVideo::CallFunc_LoadVideo_ReturnValue' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnError
// 0x0048 (0x0048 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError) == 0x000048, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000018, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnError::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnOpenFailure
// 0x0010 (0x0010 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure) == 0x000010, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure, URL) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnOpenFailure::URL' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnUrlFailure
// 0x0010 (0x0010 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure) == 0x000010, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure, URL) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlFailure::URL' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnUrlSuccess
// 0x0080 (0x0080 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetTimeLimitForReplayCinematic_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadVideo_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& OpenedUrl)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess) == 0x000080, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, URL) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::URL' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, CallFunc_GetTimeLimitForReplayCinematic_ReturnValue) == 0x000020, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::CallFunc_GetTimeLimitForReplayCinematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, CallFunc_LoadVideo_ReturnValue) == 0x000024, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::CallFunc_LoadVideo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, K2Node_CreateDelegate_OutputDelegate_3) == 0x000048, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, K2Node_CreateDelegate_OutputDelegate_4) == 0x000058, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, K2Node_CreateDelegate_OutputDelegate_5) == 0x000068, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000078, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnUrlSuccess::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnMediaOpened
// 0x0040 (0x0040 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& OpenedUrl)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened) == 0x000040, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened, URL) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened::URL' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaOpened::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnSkipButtonClicked
// 0x0020 (0x0020 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked final
{
public:
	TDelegate<void(const class FString& OpenedUrl)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked) == 0x000004, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked) == 0x000020, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipButtonClicked::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnMediaPlayerEndReached
// 0x0038 (0x0038 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached) == 0x000038, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000018, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnMediaPlayerEndReached::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOpeningTimedOut
// 0x0058 (0x0058 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& OpenedUrl)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut) == 0x000058, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000030, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, CallFunc_Array_Get_Item) == 0x000048, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOpeningTimedOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.StreamedVideoOnSkipBeforeVideoURLReceived
// 0x0030 (0x0030 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived final
{
public:
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived) == 0x000004, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived) == 0x000030, "Wrong size on ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'ActivatableMovieWidget_Monolithic_C_StreamedVideoOnSkipBeforeVideoURLReceived::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.ModifyStreamSourceTemplate
// 0x0050 (0x0050 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate final
{
public:
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0000(0x0050)(ZeroConstructor)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate) == 0x000050, "Wrong size on ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate, K2Node_MakeMap_Map) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_ModifyStreamSourceTemplate::K2Node_MakeMap_Map' has a wrong offset!");

// Function ActivatableMovieWidget_Monolithic.ActivatableMovieWidget_Monolithic_C.LoadStreamingVideo
// 0x0158 (0x0158 - 0x0000)
struct ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo final
{
public:
	class UFortStreamMediaSource*                 StreamingMediaSource;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VideoString_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StreamingVideoID_0;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FallbackVideoID_0;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ProdLinkID_0;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 GameDevLinkID_0;                                   // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsAutoplay_0;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceAutoplay;                                     // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StreamingEnabled;                                  // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VideoUID_0;                                        // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NoAutoPlay;                                        // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStreamMediaSource*                 MediaSource;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0080(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0098(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x00B0(0x0018)()
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAutoPlayVideo_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00D0(0x0018)()
	bool                                          CallFunc_NotEqual_TextText_ReturnValue_1;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x00F0(0x0018)()
	TDelegate<void(const class FString& OpenedUrl)> K2Node_CreateDelegate_OutputDelegate;              // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue_2;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& RetrievedUrl)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo) == 0x000008, "Wrong alignment on ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo");
static_assert(sizeof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo) == 0x000158, "Wrong size on ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, StreamingMediaSource) == 0x000000, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::StreamingMediaSource' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, VideoString_0) == 0x000008, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::VideoString_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, StreamingVideoID_0) == 0x000010, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::StreamingVideoID_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, FallbackVideoID_0) == 0x000018, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::FallbackVideoID_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, ProdLinkID_0) == 0x000020, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::ProdLinkID_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, GameDevLinkID_0) == 0x000030, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::GameDevLinkID_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, IsAutoplay_0) == 0x000040, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::IsAutoplay_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, ForceAutoplay) == 0x000041, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::ForceAutoplay' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, StreamingEnabled) == 0x000042, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::StreamingEnabled' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, VideoUID_0) == 0x000048, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::VideoUID_0' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, NoAutoPlay) == 0x000058, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::NoAutoPlay' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, MediaSource) == 0x000060, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::MediaSource' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000080, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_Conv_NameToText_ReturnValue) == 0x000098, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0000B0, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_NotEqual_TextText_ReturnValue) == 0x0000C8, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_ShouldAutoPlayVideo_ReturnValue) == 0x0000C9, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_ShouldAutoPlayVideo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_BooleanOR_ReturnValue) == 0x0000CA, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000D0, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_NotEqual_TextText_ReturnValue_1) == 0x0000E8, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_NotEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0000F0, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, K2Node_CreateDelegate_OutputDelegate) == 0x000108, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_NotEqual_TextText_ReturnValue_2) == 0x000118, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_NotEqual_TextText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, K2Node_CreateDelegate_OutputDelegate_1) == 0x00011C, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, K2Node_CreateDelegate_OutputDelegate_2) == 0x00012C, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, K2Node_CreateDelegate_OutputDelegate_3) == 0x00013C, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo, CallFunc_GetPlayerController_ReturnValue) == 0x000150, "Member 'ActivatableMovieWidget_Monolithic_C_LoadStreamingVideo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

}

