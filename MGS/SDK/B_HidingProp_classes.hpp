#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HidingProp

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_HidingProp.B_HidingProp_C
// 0x0178 (0x0C80 - 0x0B08)
class AB_HidingProp_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   S_Athena_Launchpad_Collision;                      // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HideLocation_ForwardVector;                        // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPawn*>                      HidingPlayers;                                     // 0x0B28(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify)
	class FText                                   InteractText;                                      // 0x0B38(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	struct FGameplayTag                           EnterGameplayCue;                                  // 0x0B50(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ExitGameplayCue;                                   // 0x0B58(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           LandedOnGameplayCue;                               // 0x0B60(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           RustleGameplayCue;                                 // 0x0B70(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ExitGameplayCue_Player;                            // 0x0B78(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WhileEnteringGameplayCue;                          // 0x0B80(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Enabled;                                           // 0x0B88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         PlayerLimit;                                       // 0x0BA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DamageHeight;                                      // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCC[0x4];                                      // 0x0BCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      DestroyObjectTypes;                                // 0x0BD0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                LaunchOffTopTraceExtents;                          // 0x0BE0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BEC[0x4];                                      // 0x0BEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPawn*>                      Array;                                             // 0x0BF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         int_0;                                             // 0x0C00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeimosPropSpawnerOffset;                           // 0x0C04(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyEnterFromFront;                                // 0x0C10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C11[0x3];                                      // 0x0C11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxInteractAngle;                                  // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WobbleLocationOffset;                              // 0x0C18(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomWobbleNormal;                                // 0x0C24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C25[0x3];                                      // 0x0C25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractBelowPropDistance;                         // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2C[0x4];                                      // 0x0C2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AFortPawn*, float>                 HiddenPlayersAndEnterTimes;                        // 0x0C30(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_HidingProp(int32 EntryPoint);
	void Pawn_Died(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void WatchForPlayerDeath(class AFortPawn* FortPawn);
	void EndHidingAnalyticSession(class AFortPawn* FortPawn, EEnvironmentalItemEndReason EndReason);
	void Enter();
	void HidingPlayerCountChanged();
	void StopHidingLoop();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void LaunchPlayersOffTop(class AFortPlayerPawn* PlayerPawn);
	void LandedOnHayStack(class AFortPlayerPawn* PlayerPawn, float Z_Velocity_Mag);
	void BndEvt__S_Athena_Launchpad_Collision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void OnRep_HidingPlayers();
	void AddHiddenPlayer(class AFortPawn* FortPawn);
	void RemoveHiddenPlayer(class AFortPawn* FortPawn);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_HidingProp_C">();
	}
	static class AB_HidingProp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_HidingProp_C>();
	}
};
static_assert(alignof(AB_HidingProp_C) == 0x000008, "Wrong alignment on AB_HidingProp_C");
static_assert(sizeof(AB_HidingProp_C) == 0x000C80, "Wrong size on AB_HidingProp_C");
static_assert(offsetof(AB_HidingProp_C, UberGraphFrame) == 0x000B08, "Member 'AB_HidingProp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, S_Athena_Launchpad_Collision) == 0x000B10, "Member 'AB_HidingProp_C::S_Athena_Launchpad_Collision' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, Sphere) == 0x000B18, "Member 'AB_HidingProp_C::Sphere' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, HideLocation_ForwardVector) == 0x000B20, "Member 'AB_HidingProp_C::HideLocation_ForwardVector' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, HidingPlayers) == 0x000B28, "Member 'AB_HidingProp_C::HidingPlayers' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, InteractText) == 0x000B38, "Member 'AB_HidingProp_C::InteractText' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, EnterGameplayCue) == 0x000B50, "Member 'AB_HidingProp_C::EnterGameplayCue' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, ExitGameplayCue) == 0x000B58, "Member 'AB_HidingProp_C::ExitGameplayCue' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, LandedOnGameplayCue) == 0x000B60, "Member 'AB_HidingProp_C::LandedOnGameplayCue' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, Mid) == 0x000B68, "Member 'AB_HidingProp_C::Mid' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, RustleGameplayCue) == 0x000B70, "Member 'AB_HidingProp_C::RustleGameplayCue' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, ExitGameplayCue_Player) == 0x000B78, "Member 'AB_HidingProp_C::ExitGameplayCue_Player' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, WhileEnteringGameplayCue) == 0x000B80, "Member 'AB_HidingProp_C::WhileEnteringGameplayCue' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, Enabled) == 0x000B88, "Member 'AB_HidingProp_C::Enabled' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, PlayerLimit) == 0x000BA8, "Member 'AB_HidingProp_C::PlayerLimit' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, DamageHeight) == 0x000BC8, "Member 'AB_HidingProp_C::DamageHeight' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, DestroyObjectTypes) == 0x000BD0, "Member 'AB_HidingProp_C::DestroyObjectTypes' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, LaunchOffTopTraceExtents) == 0x000BE0, "Member 'AB_HidingProp_C::LaunchOffTopTraceExtents' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, Array) == 0x000BF0, "Member 'AB_HidingProp_C::Array' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, int_0) == 0x000C00, "Member 'AB_HidingProp_C::int_0' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, DeimosPropSpawnerOffset) == 0x000C04, "Member 'AB_HidingProp_C::DeimosPropSpawnerOffset' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, OnlyEnterFromFront) == 0x000C10, "Member 'AB_HidingProp_C::OnlyEnterFromFront' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, MaxInteractAngle) == 0x000C14, "Member 'AB_HidingProp_C::MaxInteractAngle' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, WobbleLocationOffset) == 0x000C18, "Member 'AB_HidingProp_C::WobbleLocationOffset' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, RandomWobbleNormal) == 0x000C24, "Member 'AB_HidingProp_C::RandomWobbleNormal' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, InteractBelowPropDistance) == 0x000C28, "Member 'AB_HidingProp_C::InteractBelowPropDistance' has a wrong offset!");
static_assert(offsetof(AB_HidingProp_C, HiddenPlayersAndEnterTimes) == 0x000C30, "Member 'AB_HidingProp_C::HiddenPlayersAndEnterTimes' has a wrong offset!");

}

