#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pawn_FrenchYedoc

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Pawn_FrenchYedoc.BP_Pawn_FrenchYedoc_C.ExecuteUbergraph_BP_Pawn_FrenchYedoc
// 0x0168 (0x0168 - 0x0000)
struct BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0008(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0034(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x00D0(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDBNO_ReturnValue;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkydiving_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurfaceSwimming_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayLocalAnimMontage_ReturnValue;         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc) == 0x000008, "Wrong alignment on BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc");
static_assert(sizeof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc) == 0x000168, "Wrong size on BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, EntryPoint) == 0x000000, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_Damage) == 0x000004, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_DamageTags) == 0x000008, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_Momentum) == 0x000028, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_HitInfo) == 0x000034, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_InstigatedBy) == 0x0000C0, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_DamageCauser) == 0x0000C8, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Event_EffectContext) == 0x0000D0, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_bool_Variable) == 0x0000E8, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_object_Variable) == 0x0000F0, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_object_Variable_1) == 0x0000F8, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_bool_Variable_1) == 0x000100, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_object_Variable_2) == 0x000108, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_bool_Variable_2) == 0x000110, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, Temp_object_Variable_3) == 0x000118, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, CallFunc_IsDBNO_ReturnValue) == 0x000120, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::CallFunc_IsDBNO_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, CallFunc_IsSkydiving_ReturnValue) == 0x000121, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::CallFunc_IsSkydiving_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Select_Default) == 0x000128, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, CallFunc_IsSurfaceSwimming_ReturnValue) == 0x000130, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::CallFunc_IsSurfaceSwimming_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Select_Default_1) == 0x000138, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, K2Node_Select_Default_2) == 0x000140, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, CallFunc_PlayLocalAnimMontage_ReturnValue) == 0x000148, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::CallFunc_PlayLocalAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000150, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000158, "Member 'BP_Pawn_FrenchYedoc_C_ExecuteUbergraph_BP_Pawn_FrenchYedoc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_Pawn_FrenchYedoc.BP_Pawn_FrenchYedoc_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects");
static_assert(sizeof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'BP_Pawn_FrenchYedoc_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

}

