#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IntroRotatingText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass IntroRotatingText.IntroRotatingText_C
// 0x0028 (0x0258 - 0x0230)
class UIntroRotatingText_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       RotatingText;                                      // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           Texts;                                             // 0x0240(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         TimeBetweenRotations;                              // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TextsIndex;                                        // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void RotateText();
	void ExecuteUbergraph_IntroRotatingText(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IntroRotatingText_C">();
	}
	static class UIntroRotatingText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIntroRotatingText_C>();
	}
};
static_assert(alignof(UIntroRotatingText_C) == 0x000008, "Wrong alignment on UIntroRotatingText_C");
static_assert(sizeof(UIntroRotatingText_C) == 0x000258, "Wrong size on UIntroRotatingText_C");
static_assert(offsetof(UIntroRotatingText_C, UberGraphFrame) == 0x000230, "Member 'UIntroRotatingText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UIntroRotatingText_C, RotatingText) == 0x000238, "Member 'UIntroRotatingText_C::RotatingText' has a wrong offset!");
static_assert(offsetof(UIntroRotatingText_C, Texts) == 0x000240, "Member 'UIntroRotatingText_C::Texts' has a wrong offset!");
static_assert(offsetof(UIntroRotatingText_C, TimeBetweenRotations) == 0x000250, "Member 'UIntroRotatingText_C::TimeBetweenRotations' has a wrong offset!");
static_assert(offsetof(UIntroRotatingText_C, TextsIndex) == 0x000254, "Member 'UIntroRotatingText_C::TextsIndex' has a wrong offset!");

}

