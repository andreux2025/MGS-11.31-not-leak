#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WinterQuestPresentScreen

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WinterQuestPresentScreen.WinterQuestPresentScreen_C.OnUpdatePlatformType
// 0x0001 (0x0001 - 0x0000)
struct WinterQuestPresentScreen_C_OnUpdatePlatformType final
{
public:
	ECommonPlatformType                           PlatformType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WinterQuestPresentScreen_C_OnUpdatePlatformType) == 0x000001, "Wrong alignment on WinterQuestPresentScreen_C_OnUpdatePlatformType");
static_assert(sizeof(WinterQuestPresentScreen_C_OnUpdatePlatformType) == 0x000001, "Wrong size on WinterQuestPresentScreen_C_OnUpdatePlatformType");
static_assert(offsetof(WinterQuestPresentScreen_C_OnUpdatePlatformType, PlatformType) == 0x000000, "Member 'WinterQuestPresentScreen_C_OnUpdatePlatformType::PlatformType' has a wrong offset!");

// Function WinterQuestPresentScreen.WinterQuestPresentScreen_C.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WinterQuestPresentScreen_C_OnInputMethodChanged final
{
public:
	ECommonInputType                              NewMethod;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WinterQuestPresentScreen_C_OnInputMethodChanged) == 0x000001, "Wrong alignment on WinterQuestPresentScreen_C_OnInputMethodChanged");
static_assert(sizeof(WinterQuestPresentScreen_C_OnInputMethodChanged) == 0x000001, "Wrong size on WinterQuestPresentScreen_C_OnInputMethodChanged");
static_assert(offsetof(WinterQuestPresentScreen_C_OnInputMethodChanged, NewMethod) == 0x000000, "Member 'WinterQuestPresentScreen_C_OnInputMethodChanged::NewMethod' has a wrong offset!");

// Function WinterQuestPresentScreen.WinterQuestPresentScreen_C.OnUpdateShakePercentage
// 0x0004 (0x0004 - 0x0000)
struct WinterQuestPresentScreen_C_OnUpdateShakePercentage final
{
public:
	float                                         InPercentage;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WinterQuestPresentScreen_C_OnUpdateShakePercentage) == 0x000004, "Wrong alignment on WinterQuestPresentScreen_C_OnUpdateShakePercentage");
static_assert(sizeof(WinterQuestPresentScreen_C_OnUpdateShakePercentage) == 0x000004, "Wrong size on WinterQuestPresentScreen_C_OnUpdateShakePercentage");
static_assert(offsetof(WinterQuestPresentScreen_C_OnUpdateShakePercentage, InPercentage) == 0x000000, "Member 'WinterQuestPresentScreen_C_OnUpdateShakePercentage::InPercentage' has a wrong offset!");

// Function WinterQuestPresentScreen.WinterQuestPresentScreen_C.OnUpdateShakeRecharge
// 0x0004 (0x0004 - 0x0000)
struct WinterQuestPresentScreen_C_OnUpdateShakeRecharge final
{
public:
	float                                         InPercentage;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WinterQuestPresentScreen_C_OnUpdateShakeRecharge) == 0x000004, "Wrong alignment on WinterQuestPresentScreen_C_OnUpdateShakeRecharge");
static_assert(sizeof(WinterQuestPresentScreen_C_OnUpdateShakeRecharge) == 0x000004, "Wrong size on WinterQuestPresentScreen_C_OnUpdateShakeRecharge");
static_assert(offsetof(WinterQuestPresentScreen_C_OnUpdateShakeRecharge, InPercentage) == 0x000000, "Member 'WinterQuestPresentScreen_C_OnUpdateShakeRecharge::InPercentage' has a wrong offset!");

// Function WinterQuestPresentScreen.WinterQuestPresentScreen_C.ExecuteUbergraph_WinterQuestPresentScreen
// 0x0050 (0x0050 - 0x0000)
struct WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWinterQuest_ShakePrompt_C*             K2Node_DynamicCast_AsWinter_Quest_Shake_Prompt;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonPlatformType                           K2Node_Event_PlatformType;                         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWinterQuest_OpenPrompt_C*              K2Node_DynamicCast_AsWinter_Quest_Open_Prompt;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              K2Node_Event_NewMethod;                            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InPercentage_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWinterQuest_ShakePrompt_C*             K2Node_DynamicCast_AsWinter_Quest_Shake_Prompt_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWinterQuest_OpenPrompt_C*              K2Node_DynamicCast_AsWinter_Quest_Open_Prompt_1;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InPercentage;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen) == 0x000008, "Wrong alignment on WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen");
static_assert(sizeof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen) == 0x000050, "Wrong size on WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, EntryPoint) == 0x000000, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, Temp_byte_Variable) == 0x000004, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_AsWinter_Quest_Shake_Prompt) == 0x000008, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_AsWinter_Quest_Shake_Prompt' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, Temp_byte_Variable_1) == 0x000011, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, Temp_byte_Variable_2) == 0x000012, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, Temp_byte_Variable_3) == 0x000013, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, Temp_byte_Variable_4) == 0x000014, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_Event_PlatformType) == 0x000015, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_Event_PlatformType' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_AsWinter_Quest_Open_Prompt) == 0x000018, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_AsWinter_Quest_Open_Prompt' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_Event_NewMethod) == 0x000022, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_Event_NewMethod' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_Event_InPercentage_1) == 0x000024, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_Event_InPercentage_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_Select_Default) == 0x000028, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_AsWinter_Quest_Shake_Prompt_1) == 0x000030, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_AsWinter_Quest_Shake_Prompt_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_AsWinter_Quest_Open_Prompt_1) == 0x000040, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_AsWinter_Quest_Open_Prompt_1' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_DynamicCast_bSuccess_3) == 0x000048, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen, K2Node_Event_InPercentage) == 0x00004C, "Member 'WinterQuestPresentScreen_C_ExecuteUbergraph_WinterQuestPresentScreen::K2Node_Event_InPercentage' has a wrong offset!");

}

