#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnnualPassAccountFlair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AnnualPassAccountFlair.AnnualPassAccountFlair_C
// 0x0028 (0x0258 - 0x0230)
class UAnnualPassAccountFlair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Left;                                        // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RIght;                                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Messaging;                                         // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Show_Left_Image;                                   // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ExecuteUbergraph_AnnualPassAccountFlair(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnnualPassAccountFlair_C">();
	}
	static class UAnnualPassAccountFlair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnnualPassAccountFlair_C>();
	}
};
static_assert(alignof(UAnnualPassAccountFlair_C) == 0x000008, "Wrong alignment on UAnnualPassAccountFlair_C");
static_assert(sizeof(UAnnualPassAccountFlair_C) == 0x000258, "Wrong size on UAnnualPassAccountFlair_C");
static_assert(offsetof(UAnnualPassAccountFlair_C, UberGraphFrame) == 0x000230, "Member 'UAnnualPassAccountFlair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnnualPassAccountFlair_C, Image_Left) == 0x000238, "Member 'UAnnualPassAccountFlair_C::Image_Left' has a wrong offset!");
static_assert(offsetof(UAnnualPassAccountFlair_C, Image_RIght) == 0x000240, "Member 'UAnnualPassAccountFlair_C::Image_RIght' has a wrong offset!");
static_assert(offsetof(UAnnualPassAccountFlair_C, Messaging) == 0x000248, "Member 'UAnnualPassAccountFlair_C::Messaging' has a wrong offset!");
static_assert(offsetof(UAnnualPassAccountFlair_C, Show_Left_Image) == 0x000250, "Member 'UAnnualPassAccountFlair_C::Show_Left_Image' has a wrong offset!");

}

