#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_Hunting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_Hunting.GAB_Hunting_C
// 0x0070 (0x0AA0 - 0x0A30)
class UGAB_Hunting_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEnvQuery*                              EQS_Hunting_Query;                                 // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EQS_Grid_Half_Size;                                // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EQS_Density;                                       // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HuntingMoveTaskName;                               // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIController*                      MyFortAIController;                                // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HuntingTarget;                                     // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastTimeStartedHunting;                            // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HuntingRestartDelta;                               // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilityTask_MoveAI*                MovementTask;                                      // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 GoalDistancesOnCompleteMove;                       // 0x0A70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        PawnPositionsOnCompletedMove;                      // 0x0A80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          ShouldAbortHunting;                                // 0x0A90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A91[0x3];                                      // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinGoalDistChange;                                 // 0x0A94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinPawnDistChange;                                 // 0x0A98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_Hunting(int32 EntryPoint);
	void StoreGoalDistance();
	void Restart_Hunting();
	void StartQuery();
	void OnTargetPerceptionUpdated_Event_0(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void OnHuntingQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void OnComplete_1139C33842819C6E767F7AA892C4E6BD();
	void OnInterrupted_1139C33842819C6E767F7AA892C4E6BD();
	void OnCancelled_1139C33842819C6E767F7AA892C4E6BD();
	void OnRequestFailed_1139C33842819C6E767F7AA892C4E6BD();
	void OnMoveFinished_1139C33842819C6E767F7AA892C4E6BD(EPathFollowingResult Result, class AAIController* AIController);
	void UpdateDistanceData(TArray<float>& DistArray, float NewDistance, float* MinValue, float* MaxValue, bool* HasValidData);
	void UpdatePositionData(TArray<struct FVector>& PosArray, const struct FVector& NewPosition, float* MaxDistance, bool* HasValidData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_Hunting_C">();
	}
	static class UGAB_Hunting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_Hunting_C>();
	}
};
static_assert(alignof(UGAB_Hunting_C) == 0x000008, "Wrong alignment on UGAB_Hunting_C");
static_assert(sizeof(UGAB_Hunting_C) == 0x000AA0, "Wrong size on UGAB_Hunting_C");
static_assert(offsetof(UGAB_Hunting_C, UberGraphFrame) == 0x000A30, "Member 'UGAB_Hunting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, EQS_Hunting_Query) == 0x000A38, "Member 'UGAB_Hunting_C::EQS_Hunting_Query' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, EQS_Grid_Half_Size) == 0x000A40, "Member 'UGAB_Hunting_C::EQS_Grid_Half_Size' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, EQS_Density) == 0x000A44, "Member 'UGAB_Hunting_C::EQS_Density' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, HuntingMoveTaskName) == 0x000A48, "Member 'UGAB_Hunting_C::HuntingMoveTaskName' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, MyFortAIController) == 0x000A50, "Member 'UGAB_Hunting_C::MyFortAIController' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, HuntingTarget) == 0x000A58, "Member 'UGAB_Hunting_C::HuntingTarget' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, LastTimeStartedHunting) == 0x000A60, "Member 'UGAB_Hunting_C::LastTimeStartedHunting' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, HuntingRestartDelta) == 0x000A64, "Member 'UGAB_Hunting_C::HuntingRestartDelta' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, MovementTask) == 0x000A68, "Member 'UGAB_Hunting_C::MovementTask' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, GoalDistancesOnCompleteMove) == 0x000A70, "Member 'UGAB_Hunting_C::GoalDistancesOnCompleteMove' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, PawnPositionsOnCompletedMove) == 0x000A80, "Member 'UGAB_Hunting_C::PawnPositionsOnCompletedMove' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, ShouldAbortHunting) == 0x000A90, "Member 'UGAB_Hunting_C::ShouldAbortHunting' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, MinGoalDistChange) == 0x000A94, "Member 'UGAB_Hunting_C::MinGoalDistChange' has a wrong offset!");
static_assert(offsetof(UGAB_Hunting_C, MinPawnDistChange) == 0x000A98, "Member 'UGAB_Hunting_C::MinPawnDistChange' has a wrong offset!");

}

