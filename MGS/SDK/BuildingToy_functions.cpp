#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingToy

#include "Basic.hpp"

#include "BuildingToy_classes.hpp"
#include "BuildingToy_parameters.hpp"


namespace SDK
{

// Function BuildingToy.BuildingToy_C.ExecuteUbergraph_BuildingToy
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABuildingToy_C::ExecuteUbergraph_BuildingToy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "ExecuteUbergraph_BuildingToy");

	Params::BuildingToy_C_ExecuteUbergraph_BuildingToy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BuildingToy.BuildingToy_C.On Play Mode Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInPlayMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABuildingToy_C::On_Play_Mode_Changed(class AFortMinigame* Minigame, bool bIsInPlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "On Play Mode Changed");

	Params::BuildingToy_C_On_Play_Mode_Changed Parms{};

	Parms.Minigame = Minigame;
	Parms.bIsInPlayMode = bIsInPlayMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BuildingToy.BuildingToy_C.BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AFortMinigame*                    Minigame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABuildingToy_C::BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature(class AFortMinigame* Minigame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature");

	Params::BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature Parms{};

	Parms.Minigame = Minigame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BuildingToy.BuildingToy_C.OnMinigameEnded
// (BlueprintCallable, BlueprintEvent)

void ABuildingToy_C::OnMinigameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "OnMinigameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BuildingToy.BuildingToy_C.OnMinigameStarted
// (BlueprintCallable, BlueprintEvent)

void ABuildingToy_C::OnMinigameStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "OnMinigameStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BuildingToy.BuildingToy_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABuildingToy_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BuildingToy.BuildingToy_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void ABuildingToy_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_1_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BuildingToy.BuildingToy_C.BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_0_AnyPropertyChangedDelegate__DelegateSignature
// (BlueprintEvent)

void ABuildingToy_C::BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_0_AnyPropertyChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "BndEvt__ToyOptionsComponent_K2Node_ComponentBoundEvent_0_AnyPropertyChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BuildingToy.BuildingToy_C.BlueprintOnLocalInteract
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABuildingToy_C::BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "BlueprintOnLocalInteract");

	Params::BuildingToy_C_BlueprintOnLocalInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BuildingToy.BuildingToy_C.MinigameIsRunning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    GameIsRunning                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABuildingToy_C::MinigameIsRunning(bool* GameIsRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "MinigameIsRunning");

	Params::BuildingToy_C_MinigameIsRunning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameIsRunning != nullptr)
		*GameIsRunning = Parms.GameIsRunning;
}


// Function BuildingToy.BuildingToy_C.UpdateVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void ABuildingToy_C::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "UpdateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BuildingToy.BuildingToy_C.IsVisibleDuringMinigame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsVisibleDuringMinigame_0                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABuildingToy_C::IsVisibleDuringMinigame(bool* IsVisibleDuringMinigame_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "IsVisibleDuringMinigame");

	Params::BuildingToy_C_IsVisibleDuringMinigame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisibleDuringMinigame_0 != nullptr)
		*IsVisibleDuringMinigame_0 = Parms.IsVisibleDuringMinigame_0;
}


// Function BuildingToy.BuildingToy_C.DesiredVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Visibility                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABuildingToy_C::DesiredVisibility(bool* Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "DesiredVisibility");

	Params::BuildingToy_C_DesiredVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visibility != nullptr)
		*Visibility = Parms.Visibility;
}


// Function BuildingToy.BuildingToy_C.GetVisualComponents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USceneComponent*>          Components                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)

void ABuildingToy_C::GetVisualComponents(TArray<class USceneComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "GetVisualComponents");

	Params::BuildingToy_C_GetVisualComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function BuildingToy.BuildingToy_C.BlueprintCanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInteractionBeingAttempted              InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABuildingToy_C::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "BlueprintCanInteract");

	Params::BuildingToy_C_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BuildingToy.BuildingToy_C.BlueprintGetInteractionString
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInteractionBeingAttempted              InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABuildingToy_C::BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingToy_C", "BlueprintGetInteractionString");

	Params::BuildingToy_C_BlueprintGetInteractionString Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

