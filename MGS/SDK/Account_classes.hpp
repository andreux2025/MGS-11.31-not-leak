#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Account

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Account_structs.hpp"


namespace SDK
{

// Class Account.ExternalAccountProvider
// 0x0010 (0x0038 - 0x0028)
class UExternalAccountProvider final : public UObject
{
public:
	TArray<struct FExternalAccountServiceConfig>  Services;                                          // 0x0028(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ExternalAccountProvider">();
	}
	static class UExternalAccountProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExternalAccountProvider>();
	}
};
static_assert(alignof(UExternalAccountProvider) == 0x000008, "Wrong alignment on UExternalAccountProvider");
static_assert(sizeof(UExternalAccountProvider) == 0x000038, "Wrong size on UExternalAccountProvider");
static_assert(offsetof(UExternalAccountProvider, Services) == 0x000028, "Member 'UExternalAccountProvider::Services' has a wrong offset!");

// Class Account.OnlineAccountCommon
// 0x06A0 (0x06C8 - 0x0028)
class UOnlineAccountCommon : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AvailabilityServiceGameName;                       // 0x0038(0x0010)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRequireLightswitchAtStartup;                      // 0x0048(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EulaKey;                                           // 0x0050(0x0010)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWebEnvUrl>                     WebCreateEpicAccountUrl;                           // 0x0060(0x0010)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                          bAllowLocalLogout;                                 // 0x0070(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowLocalLogoutKairos;                           // 0x0071(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUsePinGrantCodeForLinking;                        // 0x0072(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RedeemAccessUrl;                                   // 0x0078(0x0010)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 RequestFreeAccessUrl;                              // 0x0088(0x0010)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 RealGameAccessUrl;                                 // 0x0098(0x0010)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SkipRedeemOfflinePurchasesChance;                  // 0x00A8(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldGrantFreeAccess;                            // 0x00AC(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AD[0x1];                                       // 0x00AD(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAllowHomeSharingAccess;                           // 0x00AE(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRequireUGCPrivilege;                              // 0x00AF(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x298];                                     // 0x00B0(0x0298)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AccessGrantDelaySeconds;                           // 0x0348(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaitingRoomState*                      WaitingRoomState;                                  // 0x0350(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x338];                                    // 0x0358(0x0338)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAutoCreateHeadlessAccount;                        // 0x0690(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_691[0x37];                                     // 0x0691(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnlineAccountCommon">();
	}
	static class UOnlineAccountCommon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineAccountCommon>();
	}
};
static_assert(alignof(UOnlineAccountCommon) == 0x000008, "Wrong alignment on UOnlineAccountCommon");
static_assert(sizeof(UOnlineAccountCommon) == 0x0006C8, "Wrong size on UOnlineAccountCommon");
static_assert(offsetof(UOnlineAccountCommon, AvailabilityServiceGameName) == 0x000038, "Member 'UOnlineAccountCommon::AvailabilityServiceGameName' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bRequireLightswitchAtStartup) == 0x000048, "Member 'UOnlineAccountCommon::bRequireLightswitchAtStartup' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, EulaKey) == 0x000050, "Member 'UOnlineAccountCommon::EulaKey' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, WebCreateEpicAccountUrl) == 0x000060, "Member 'UOnlineAccountCommon::WebCreateEpicAccountUrl' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bAllowLocalLogout) == 0x000070, "Member 'UOnlineAccountCommon::bAllowLocalLogout' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bAllowLocalLogoutKairos) == 0x000071, "Member 'UOnlineAccountCommon::bAllowLocalLogoutKairos' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bUsePinGrantCodeForLinking) == 0x000072, "Member 'UOnlineAccountCommon::bUsePinGrantCodeForLinking' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, RedeemAccessUrl) == 0x000078, "Member 'UOnlineAccountCommon::RedeemAccessUrl' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, RequestFreeAccessUrl) == 0x000088, "Member 'UOnlineAccountCommon::RequestFreeAccessUrl' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, RealGameAccessUrl) == 0x000098, "Member 'UOnlineAccountCommon::RealGameAccessUrl' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, SkipRedeemOfflinePurchasesChance) == 0x0000A8, "Member 'UOnlineAccountCommon::SkipRedeemOfflinePurchasesChance' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bShouldGrantFreeAccess) == 0x0000AC, "Member 'UOnlineAccountCommon::bShouldGrantFreeAccess' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bAllowHomeSharingAccess) == 0x0000AE, "Member 'UOnlineAccountCommon::bAllowHomeSharingAccess' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bRequireUGCPrivilege) == 0x0000AF, "Member 'UOnlineAccountCommon::bRequireUGCPrivilege' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, AccessGrantDelaySeconds) == 0x000348, "Member 'UOnlineAccountCommon::AccessGrantDelaySeconds' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, WaitingRoomState) == 0x000350, "Member 'UOnlineAccountCommon::WaitingRoomState' has a wrong offset!");
static_assert(offsetof(UOnlineAccountCommon, bAutoCreateHeadlessAccount) == 0x000690, "Member 'UOnlineAccountCommon::bAutoCreateHeadlessAccount' has a wrong offset!");

// Class Account.WaitingRoomState
// 0x0060 (0x0088 - 0x0028)
class UWaitingRoomState final : public UObject
{
public:
	uint8                                         Pad_28[0x34];                                      // 0x0028(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GracePeriodMins;                                   // 0x005C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x28];                                      // 0x0060(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WaitingRoomState">();
	}
	static class UWaitingRoomState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitingRoomState>();
	}
};
static_assert(alignof(UWaitingRoomState) == 0x000008, "Wrong alignment on UWaitingRoomState");
static_assert(sizeof(UWaitingRoomState) == 0x000088, "Wrong size on UWaitingRoomState");
static_assert(offsetof(UWaitingRoomState, GracePeriodMins) == 0x00005C, "Member 'UWaitingRoomState::GracePeriodMins' has a wrong offset!");

}

