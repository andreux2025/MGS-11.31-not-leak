#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingToy

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BuildingToy.BuildingToy_C.ExecuteUbergraph_BuildingToy
// 0x0068 (0x0068 - 0x0000)
struct BuildingToy_C_ExecuteUbergraph_BuildingToy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMinigame* Minigame, bool bIsInPlayMode)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          K2Node_ComponentBoundEvent_Minigame;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPlayMode_Play_Mode;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          K2Node_CustomEvent_Minigame;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsInPlayMode;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_ExecuteUbergraph_BuildingToy) == 0x000008, "Wrong alignment on BuildingToy_C_ExecuteUbergraph_BuildingToy");
static_assert(sizeof(BuildingToy_C_ExecuteUbergraph_BuildingToy) == 0x000068, "Wrong size on BuildingToy_C_ExecuteUbergraph_BuildingToy");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, EntryPoint) == 0x000000, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_IsDedicatedServer_ReturnValue) == 0x000029, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002A, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_HasAuthority_ReturnValue_1) == 0x00003C, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003D, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, Temp_object_Variable) == 0x000040, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, K2Node_ComponentBoundEvent_Minigame) == 0x000048, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::K2Node_ComponentBoundEvent_Minigame' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, CallFunc_IsInPlayMode_Play_Mode) == 0x000050, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::CallFunc_IsInPlayMode_Play_Mode' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, K2Node_CustomEvent_Minigame) == 0x000058, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::K2Node_CustomEvent_Minigame' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_ExecuteUbergraph_BuildingToy, K2Node_CustomEvent_bIsInPlayMode) == 0x000060, "Member 'BuildingToy_C_ExecuteUbergraph_BuildingToy::K2Node_CustomEvent_bIsInPlayMode' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.On Play Mode Changed
// 0x0010 (0x0010 - 0x0000)
struct BuildingToy_C_On_Play_Mode_Changed final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInPlayMode;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_On_Play_Mode_Changed) == 0x000008, "Wrong alignment on BuildingToy_C_On_Play_Mode_Changed");
static_assert(sizeof(BuildingToy_C_On_Play_Mode_Changed) == 0x000010, "Wrong size on BuildingToy_C_On_Play_Mode_Changed");
static_assert(offsetof(BuildingToy_C_On_Play_Mode_Changed, Minigame) == 0x000000, "Member 'BuildingToy_C_On_Play_Mode_Changed::Minigame' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_On_Play_Mode_Changed, bIsInPlayMode) == 0x000008, "Member 'BuildingToy_C_On_Play_Mode_Changed::bIsInPlayMode' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature) == 0x000008, "Wrong alignment on BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature");
static_assert(sizeof(BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature) == 0x000008, "Wrong size on BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature");
static_assert(offsetof(BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature, Minigame) == 0x000000, "Member 'BuildingToy_C_BndEvt__FortMinigameProgress_K2Node_ComponentBoundEvent_2_OnMinigameAssignmentChanged__DelegateSignature::Minigame' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.BlueprintOnLocalInteract
// 0x0010 (0x0010 - 0x0000)
struct BuildingToy_C_BlueprintOnLocalInteract final
{
public:
	class AFortPlayerPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_BlueprintOnLocalInteract) == 0x000008, "Wrong alignment on BuildingToy_C_BlueprintOnLocalInteract");
static_assert(sizeof(BuildingToy_C_BlueprintOnLocalInteract) == 0x000010, "Wrong size on BuildingToy_C_BlueprintOnLocalInteract");
static_assert(offsetof(BuildingToy_C_BlueprintOnLocalInteract, InteractingPawn) == 0x000000, "Member 'BuildingToy_C_BlueprintOnLocalInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintOnLocalInteract, ReturnValue) == 0x000008, "Member 'BuildingToy_C_BlueprintOnLocalInteract::ReturnValue' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.MinigameIsRunning
// 0x0003 (0x0003 - 0x0000)
struct BuildingToy_C_MinigameIsRunning final
{
public:
	bool                                          GameIsRunning;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStarted_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_MinigameIsRunning) == 0x000001, "Wrong alignment on BuildingToy_C_MinigameIsRunning");
static_assert(sizeof(BuildingToy_C_MinigameIsRunning) == 0x000003, "Wrong size on BuildingToy_C_MinigameIsRunning");
static_assert(offsetof(BuildingToy_C_MinigameIsRunning, GameIsRunning) == 0x000000, "Member 'BuildingToy_C_MinigameIsRunning::GameIsRunning' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_MinigameIsRunning, CallFunc_HasStarted_ReturnValue) == 0x000001, "Member 'BuildingToy_C_MinigameIsRunning::CallFunc_HasStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_MinigameIsRunning, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BuildingToy_C_MinigameIsRunning::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.UpdateVisuals
// 0x0038 (0x0038 - 0x0000)
struct BuildingToy_C_UpdateVisuals final
{
public:
	bool                                          bShouldBeVisible;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DesiredVisibility_Visibility;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetVisualComponents_Components;           // 0x0010(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingToy_C_UpdateVisuals) == 0x000008, "Wrong alignment on BuildingToy_C_UpdateVisuals");
static_assert(sizeof(BuildingToy_C_UpdateVisuals) == 0x000038, "Wrong size on BuildingToy_C_UpdateVisuals");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, bShouldBeVisible) == 0x000000, "Member 'BuildingToy_C_UpdateVisuals::bShouldBeVisible' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BuildingToy_C_UpdateVisuals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_DesiredVisibility_Visibility) == 0x000009, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_DesiredVisibility_Visibility' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_GetVisualComponents_Components) == 0x000010, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_GetVisualComponents_Components' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_Array_Get_Item) == 0x000020, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BuildingToy_C_UpdateVisuals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_UpdateVisuals, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BuildingToy_C_UpdateVisuals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.IsVisibleDuringMinigame
// 0x0001 (0x0001 - 0x0000)
struct BuildingToy_C_IsVisibleDuringMinigame final
{
public:
	bool                                          IsVisibleDuringMinigame_0;                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_IsVisibleDuringMinigame) == 0x000001, "Wrong alignment on BuildingToy_C_IsVisibleDuringMinigame");
static_assert(sizeof(BuildingToy_C_IsVisibleDuringMinigame) == 0x000001, "Wrong size on BuildingToy_C_IsVisibleDuringMinigame");
static_assert(offsetof(BuildingToy_C_IsVisibleDuringMinigame, IsVisibleDuringMinigame_0) == 0x000000, "Member 'BuildingToy_C_IsVisibleDuringMinigame::IsVisibleDuringMinigame_0' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.DesiredVisibility
// 0x0018 (0x0018 - 0x0000)
struct BuildingToy_C_DesiredVisibility final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibleDuringMinigame_IsVisibleDuringMinigame; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInPlayMode_Play_Mode;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_DesiredVisibility) == 0x000008, "Wrong alignment on BuildingToy_C_DesiredVisibility");
static_assert(sizeof(BuildingToy_C_DesiredVisibility) == 0x000018, "Wrong size on BuildingToy_C_DesiredVisibility");
static_assert(offsetof(BuildingToy_C_DesiredVisibility, Visibility) == 0x000000, "Member 'BuildingToy_C_DesiredVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_DesiredVisibility, Temp_object_Variable) == 0x000008, "Member 'BuildingToy_C_DesiredVisibility::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_DesiredVisibility, CallFunc_IsVisibleDuringMinigame_IsVisibleDuringMinigame) == 0x000010, "Member 'BuildingToy_C_DesiredVisibility::CallFunc_IsVisibleDuringMinigame_IsVisibleDuringMinigame' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_DesiredVisibility, CallFunc_IsInPlayMode_Play_Mode) == 0x000011, "Member 'BuildingToy_C_DesiredVisibility::CallFunc_IsInPlayMode_Play_Mode' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_DesiredVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BuildingToy_C_DesiredVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_DesiredVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'BuildingToy_C_DesiredVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.GetVisualComponents
// 0x0020 (0x0020 - 0x0000)
struct BuildingToy_C_GetVisualComponents final
{
public:
	TArray<class USceneComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	TArray<class USceneComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BuildingToy_C_GetVisualComponents) == 0x000008, "Wrong alignment on BuildingToy_C_GetVisualComponents");
static_assert(sizeof(BuildingToy_C_GetVisualComponents) == 0x000020, "Wrong size on BuildingToy_C_GetVisualComponents");
static_assert(offsetof(BuildingToy_C_GetVisualComponents, Components) == 0x000000, "Member 'BuildingToy_C_GetVisualComponents::Components' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_GetVisualComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BuildingToy_C_GetVisualComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.BlueprintCanInteract
// 0x0050 (0x0050 - 0x0000)
struct BuildingToy_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bInteractSuccess;                                  // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStarted_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingToy_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on BuildingToy_C_BlueprintCanInteract");
static_assert(sizeof(BuildingToy_C_BlueprintCanInteract) == 0x000050, "Wrong size on BuildingToy_C_BlueprintCanInteract");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'BuildingToy_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'BuildingToy_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, ReturnValue) == 0x000009, "Member 'BuildingToy_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, bInteractSuccess) == 0x00000A, "Member 'BuildingToy_C_BlueprintCanInteract::bInteractSuccess' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000010, "Member 'BuildingToy_C_BlueprintCanInteract::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BuildingToy_C_BlueprintCanInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_IsInVehicle_ReturnValue) == 0x000019, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000030, "Member 'BuildingToy_C_BlueprintCanInteract::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BuildingToy_C_BlueprintCanInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume) == 0x000040, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue) == 0x000048, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue_3) == 0x00004A, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_HasStarted_ReturnValue) == 0x00004B, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_HasStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue_4) == 0x00004C, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BuildingToy_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BuildingToy.BuildingToy_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct BuildingToy_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BuildingToy_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on BuildingToy_C_BlueprintGetInteractionString");
static_assert(sizeof(BuildingToy_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on BuildingToy_C_BlueprintGetInteractionString");
static_assert(offsetof(BuildingToy_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'BuildingToy_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'BuildingToy_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BuildingToy_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'BuildingToy_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

}

