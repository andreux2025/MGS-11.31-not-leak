#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Creative_Enabled_Component

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Creative_EnabledState_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EEnabledState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Creative_Enabled_Component.Creative_Enabled_Component_C
// 0x0090 (0x0140 - 0x00B0)
class UCreative_Enabled_Component_C final : public UActorComponent
{
public:
	struct FCreative_EnabledState                 EnabledState;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool Enabled)>  On_Enabled_State_Changed;                          // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EnabledDuringPlayMode;                             // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnabledDuringEditMode;                             // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              On_Reset_Complete;                                 // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           Reset_Timer;                                       // 0x00E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<EFortMinigameState>                      IgnorePhases;                                      // 0x00E8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         ResetDelay;                                        // 0x0138(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Set_Enabled_on_Phase(EFortMinigameState State, int32 EnabledIndex);
	void IsEnabled(bool* Enabled);
	void Set_Enabled(bool bEnabled);
	void Set_Enabled_on_Play_Mode(bool Play_Mode);
	void Reset_Delay_Complete();
	void Reset_Delay_Start(float Delay);
	void IsResetting(bool* TRUE_0, float* Remaining_Time);
	void OnRep_EIsEnabled();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Creative_Enabled_Component_C">();
	}
	static class UCreative_Enabled_Component_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreative_Enabled_Component_C>();
	}
};
static_assert(alignof(UCreative_Enabled_Component_C) == 0x000008, "Wrong alignment on UCreative_Enabled_Component_C");
static_assert(sizeof(UCreative_Enabled_Component_C) == 0x000140, "Wrong size on UCreative_Enabled_Component_C");
static_assert(offsetof(UCreative_Enabled_Component_C, EnabledState) == 0x0000B0, "Member 'UCreative_Enabled_Component_C::EnabledState' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, On_Enabled_State_Changed) == 0x0000B8, "Member 'UCreative_Enabled_Component_C::On_Enabled_State_Changed' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, EnabledDuringPlayMode) == 0x0000C8, "Member 'UCreative_Enabled_Component_C::EnabledDuringPlayMode' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, EnabledDuringEditMode) == 0x0000C9, "Member 'UCreative_Enabled_Component_C::EnabledDuringEditMode' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, On_Reset_Complete) == 0x0000D0, "Member 'UCreative_Enabled_Component_C::On_Reset_Complete' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, Reset_Timer) == 0x0000E0, "Member 'UCreative_Enabled_Component_C::Reset_Timer' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, IgnorePhases) == 0x0000E8, "Member 'UCreative_Enabled_Component_C::IgnorePhases' has a wrong offset!");
static_assert(offsetof(UCreative_Enabled_Component_C, ResetDelay) == 0x000138, "Member 'UCreative_Enabled_Component_C::ResetDelay' has a wrong offset!");

}

