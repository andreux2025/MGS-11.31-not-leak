#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VictoryDrone_RiftDisolve

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VictoryDrone_RiftDisolve.BP_VictoryDrone_RiftDisolve_C
// 0x0030 (0x0248 - 0x0218)
class ABP_VictoryDrone_RiftDisolve_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0218(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          TeleportIn;                                        // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsAthena;                                          // 0x0229(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              TargetPlayer;                                      // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UParticleSystemComponent*               CharacterAttached;                                 // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InLobby;                                           // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_VictoryDrone_RiftDisolve(int32 EntryPoint);
	void ReceiveBeginPlay();
	void PlaySpawnAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VictoryDrone_RiftDisolve_C">();
	}
	static class ABP_VictoryDrone_RiftDisolve_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VictoryDrone_RiftDisolve_C>();
	}
};
static_assert(alignof(ABP_VictoryDrone_RiftDisolve_C) == 0x000008, "Wrong alignment on ABP_VictoryDrone_RiftDisolve_C");
static_assert(sizeof(ABP_VictoryDrone_RiftDisolve_C) == 0x000248, "Wrong size on ABP_VictoryDrone_RiftDisolve_C");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, UberGraphFrame) == 0x000218, "Member 'ABP_VictoryDrone_RiftDisolve_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, DefaultSceneRoot) == 0x000220, "Member 'ABP_VictoryDrone_RiftDisolve_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, TeleportIn) == 0x000228, "Member 'ABP_VictoryDrone_RiftDisolve_C::TeleportIn' has a wrong offset!");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, IsAthena) == 0x000229, "Member 'ABP_VictoryDrone_RiftDisolve_C::IsAthena' has a wrong offset!");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, TargetPlayer) == 0x000230, "Member 'ABP_VictoryDrone_RiftDisolve_C::TargetPlayer' has a wrong offset!");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, CharacterAttached) == 0x000238, "Member 'ABP_VictoryDrone_RiftDisolve_C::CharacterAttached' has a wrong offset!");
static_assert(offsetof(ABP_VictoryDrone_RiftDisolve_C, InLobby) == 0x000240, "Member 'ABP_VictoryDrone_RiftDisolve_C::InLobby' has a wrong offset!");

}

