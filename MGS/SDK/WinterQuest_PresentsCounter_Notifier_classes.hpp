#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WinterQuest_PresentsCounter_Notifier

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WinterQuest_PresentsCounter_Notifier.WinterQuest_PresentsCounter_Notifier_C
// 0x00A0 (0x0330 - 0x0290)
class UWinterQuest_PresentsCounter_Notifier_C final : public UFortWinterQuestPresentCounter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OpenTimer;                                         // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LoopSecondsHand;                                   // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresentJump;                                       // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenNotification;                                  // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ArrowPointer;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backing;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backing_1;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Bang;                                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_160;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InnerRing;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NoPresentsToOpen;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterBrightRing;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Present;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Present_1;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PresentIndicator;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PresentsToOpen;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RedBacking;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SecondsHand;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_1;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ShowPresentNotification();
	void OnShowCountdown(bool bShowCountDown);
	void Construct();
	void ExecuteUbergraph_WinterQuest_PresentsCounter_Notifier(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WinterQuest_PresentsCounter_Notifier_C">();
	}
	static class UWinterQuest_PresentsCounter_Notifier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWinterQuest_PresentsCounter_Notifier_C>();
	}
};
static_assert(alignof(UWinterQuest_PresentsCounter_Notifier_C) == 0x000008, "Wrong alignment on UWinterQuest_PresentsCounter_Notifier_C");
static_assert(sizeof(UWinterQuest_PresentsCounter_Notifier_C) == 0x000330, "Wrong size on UWinterQuest_PresentsCounter_Notifier_C");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, UberGraphFrame) == 0x000290, "Member 'UWinterQuest_PresentsCounter_Notifier_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, OpenTimer) == 0x000298, "Member 'UWinterQuest_PresentsCounter_Notifier_C::OpenTimer' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, LoopSecondsHand) == 0x0002A0, "Member 'UWinterQuest_PresentsCounter_Notifier_C::LoopSecondsHand' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, PresentJump) == 0x0002A8, "Member 'UWinterQuest_PresentsCounter_Notifier_C::PresentJump' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, OpenNotification) == 0x0002B0, "Member 'UWinterQuest_PresentsCounter_Notifier_C::OpenNotification' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, ArrowPointer) == 0x0002B8, "Member 'UWinterQuest_PresentsCounter_Notifier_C::ArrowPointer' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, Backing) == 0x0002C0, "Member 'UWinterQuest_PresentsCounter_Notifier_C::Backing' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, Backing_1) == 0x0002C8, "Member 'UWinterQuest_PresentsCounter_Notifier_C::Backing_1' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, Bang) == 0x0002D0, "Member 'UWinterQuest_PresentsCounter_Notifier_C::Bang' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, Image_160) == 0x0002D8, "Member 'UWinterQuest_PresentsCounter_Notifier_C::Image_160' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, InnerRing) == 0x0002E0, "Member 'UWinterQuest_PresentsCounter_Notifier_C::InnerRing' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, NoPresentsToOpen) == 0x0002E8, "Member 'UWinterQuest_PresentsCounter_Notifier_C::NoPresentsToOpen' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, OuterBrightRing) == 0x0002F0, "Member 'UWinterQuest_PresentsCounter_Notifier_C::OuterBrightRing' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, Present) == 0x0002F8, "Member 'UWinterQuest_PresentsCounter_Notifier_C::Present' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, Present_1) == 0x000300, "Member 'UWinterQuest_PresentsCounter_Notifier_C::Present_1' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, PresentIndicator) == 0x000308, "Member 'UWinterQuest_PresentsCounter_Notifier_C::PresentIndicator' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, PresentsToOpen) == 0x000310, "Member 'UWinterQuest_PresentsCounter_Notifier_C::PresentsToOpen' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, RedBacking) == 0x000318, "Member 'UWinterQuest_PresentsCounter_Notifier_C::RedBacking' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, SecondsHand) == 0x000320, "Member 'UWinterQuest_PresentsCounter_Notifier_C::SecondsHand' has a wrong offset!");
static_assert(offsetof(UWinterQuest_PresentsCounter_Notifier_C, WidgetSwitcher_1) == 0x000328, "Member 'UWinterQuest_PresentsCounter_Notifier_C::WidgetSwitcher_1' has a wrong offset!");

}

