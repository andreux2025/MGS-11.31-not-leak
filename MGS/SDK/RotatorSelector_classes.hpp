#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RotatorSelector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RotatorSelector.RotatorSelector_C
// 0x0090 (0x02E8 - 0x0258)
class URotatorSelector_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIconTextButton_C*                      ButtonLeft;                                        // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonRight;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisplayText;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Selector;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               NameBox;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_0;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextRotator_C*                         TextRotator;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HoverText;                                         // 0x02A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(int32 Selected_Index)> Selection_Changed;                                 // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCommonTextBlock*                       Tab_Tooltip_Text;                                  // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spacer_Width;                                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width_Min;                                         // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideNameParam;                                     // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void Center_On_Widget();
	void Initialize(const class FText& Display_Text, TArray<class FText>& Options, const class FText& Hover_Text, class UCommonTextBlock* Tab_Tooltip);
	void Update_Row_Selector(int32 Currently_Selected);
	void Construct();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature(int32 Value);
	void BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_RotatorSelector(int32 EntryPoint);
	void Show_Param_Name(bool Show);
	void Update_Size();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void Update_Options(TArray<class FText>& NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RotatorSelector_C">();
	}
	static class URotatorSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URotatorSelector_C>();
	}
};
static_assert(alignof(URotatorSelector_C) == 0x000008, "Wrong alignment on URotatorSelector_C");
static_assert(sizeof(URotatorSelector_C) == 0x0002E8, "Wrong size on URotatorSelector_C");
static_assert(offsetof(URotatorSelector_C, UberGraphFrame) == 0x000258, "Member 'URotatorSelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, ButtonLeft) == 0x000260, "Member 'URotatorSelector_C::ButtonLeft' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, ButtonRight) == 0x000268, "Member 'URotatorSelector_C::ButtonRight' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, DisplayText) == 0x000270, "Member 'URotatorSelector_C::DisplayText' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, HorizontalBox_Selector) == 0x000278, "Member 'URotatorSelector_C::HorizontalBox_Selector' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, NameBox) == 0x000280, "Member 'URotatorSelector_C::NameBox' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, SizeBox_0) == 0x000288, "Member 'URotatorSelector_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, Spacer_0) == 0x000290, "Member 'URotatorSelector_C::Spacer_0' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, TextRotator) == 0x000298, "Member 'URotatorSelector_C::TextRotator' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, SelectedIndex) == 0x0002A0, "Member 'URotatorSelector_C::SelectedIndex' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, HoverText) == 0x0002A8, "Member 'URotatorSelector_C::HoverText' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, Selection_Changed) == 0x0002C0, "Member 'URotatorSelector_C::Selection_Changed' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, Tab_Tooltip_Text) == 0x0002D0, "Member 'URotatorSelector_C::Tab_Tooltip_Text' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, Spacer_Width) == 0x0002D8, "Member 'URotatorSelector_C::Spacer_Width' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, Width_Min) == 0x0002DC, "Member 'URotatorSelector_C::Width_Min' has a wrong offset!");
static_assert(offsetof(URotatorSelector_C, HideNameParam) == 0x0002E0, "Member 'URotatorSelector_C::HideNameParam' has a wrong offset!");

}

