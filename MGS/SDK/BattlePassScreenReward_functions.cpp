#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassScreenReward

#include "Basic.hpp"

#include "BattlePassScreenReward_classes.hpp"
#include "BattlePassScreenReward_parameters.hpp"


namespace SDK
{

// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleMultiRewardSelectionChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::HandleMultiRewardSelectionChange(bool bIsSelected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleMultiRewardSelectionChange");

	Params::BattlePassScreenReward_C_HandleMultiRewardSelectionChange Parms{};

	Parms.bIsSelected_0 = bIsSelected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleMultiRewardSetup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        RewardItem                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        RewardTexture                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bHasAdditionalStylesToDisplay                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::HandleMultiRewardSetup(const class UFortItem* RewardItem, const TSoftObjectPtr<class UTexture2D>& RewardTexture, bool bHasAdditionalStylesToDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleMultiRewardSetup");

	Params::BattlePassScreenReward_C_HandleMultiRewardSetup Parms{};

	Parms.RewardItem = RewardItem;
	Parms.RewardTexture = RewardTexture;
	Parms.bHasAdditionalStylesToDisplay = bHasAdditionalStylesToDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleHover
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePassScreenReward_C::HandleHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleUnhover
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePassScreenReward_C::HandleUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleMultiRewardTickFillAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBattlePassScreenReward_C::HandleMultiRewardTickFillAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleMultiRewardTickFillAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleSelectedAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePassScreenReward_C::HandleSelectedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleSelectedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleDeselectedAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePassScreenReward_C::HandleDeselectedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleDeselectedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleCompletionState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFree                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOwnsBattlePass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   TierLevel_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentSeasonLevel                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::HandleCompletionState(bool bIsFree, bool bOwnsBattlePass, int32 TierLevel_0, int32 CurrentSeasonLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleCompletionState");

	Params::BattlePassScreenReward_C_HandleCompletionState Parms{};

	Parms.bIsFree = bIsFree;
	Parms.bOwnsBattlePass = bOwnsBattlePass;
	Parms.TierLevel_0 = TierLevel_0;
	Parms.CurrentSeasonLevel = CurrentSeasonLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleFreeTagVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFreeItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::HandleFreeTagVisibility(bool bIsFreeItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleFreeTagVisibility");

	Params::BattlePassScreenReward_C_HandleFreeTagVisibility Parms{};

	Parms.bIsFreeItem = bIsFreeItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleSecondaryRewardVisiblity
// (Public, BlueprintCallable, BlueprintEvent)

void UBattlePassScreenReward_C::HandleSecondaryRewardVisiblity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleSecondaryRewardVisiblity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleProgressBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ProgressAmount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::HandleProgressBar(float ProgressAmount, bool bIsLastEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleProgressBar");

	Params::BattlePassScreenReward_C_HandleProgressBar Parms{};

	Parms.ProgressAmount = ProgressAmount;
	Parms.bIsLastEntry = bIsLastEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.HandleLevelNumberStyling
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsCompletedLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   TierLevel_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::HandleLevelNumberStyling(bool bIsCompletedLevel, int32 TierLevel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "HandleLevelNumberStyling");

	Params::BattlePassScreenReward_C_HandleLevelNumberStyling Parms{};

	Parms.bIsCompletedLevel = bIsCompletedLevel;
	Parms.TierLevel_0 = TierLevel_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.SelectReward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaSeasonItemRewardIcon_C*    RewardIcon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::SelectReward(class UAthenaSeasonItemRewardIcon_C* RewardIcon, bool bIsSelected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "SelectReward");

	Params::BattlePassScreenReward_C_SelectReward Parms{};

	Parms.RewardIcon = RewardIcon;
	Parms.bIsSelected_0 = bIsSelected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.PopulateRewardData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TierLevel_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OwnsBattlePass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CurrentSeasonLevel                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::PopulateRewardData(int32 TierLevel_0, bool IsFree, bool OwnsBattlePass, int32 CurrentSeasonLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "PopulateRewardData");

	Params::BattlePassScreenReward_C_PopulateRewardData Parms{};

	Parms.TierLevel_0 = TierLevel_0;
	Parms.IsFree = IsFree;
	Parms.OwnsBattlePass = OwnsBattlePass;
	Parms.CurrentSeasonLevel = CurrentSeasonLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.OnSetReward
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortItem*                        InReward                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TierLevel_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TierProgress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLastEntry                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHasAdditionalStylesToDisplay                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TSoftObjectPtr<class UTexture2D>        RewardTexture                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// bool                                    bIsFreeItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOwnsBattlePass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SeasonLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsFirstEntry                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::OnSetReward(class UFortItem* InReward, int32 TierLevel_0, float TierProgress, bool bIsLastEntry, bool bHasAdditionalStylesToDisplay, const TSoftObjectPtr<class UTexture2D>& RewardTexture, bool bIsFreeItem, bool bOwnsBattlePass, int32 SeasonLevel, bool bIsFirstEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "OnSetReward");

	Params::BattlePassScreenReward_C_OnSetReward Parms{};

	Parms.InReward = InReward;
	Parms.TierLevel_0 = TierLevel_0;
	Parms.TierProgress = TierProgress;
	Parms.bIsLastEntry = bIsLastEntry;
	Parms.bHasAdditionalStylesToDisplay = bHasAdditionalStylesToDisplay;
	Parms.RewardTexture = RewardTexture;
	Parms.bIsFreeItem = bIsFreeItem;
	Parms.bOwnsBattlePass = bOwnsBattlePass;
	Parms.SeasonLevel = SeasonLevel;
	Parms.bIsFirstEntry = bIsFirstEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenReward_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenReward_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBattlePassScreenReward_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.FadeOutSocialUser
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCallback                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattlePassScreenReward_C::FadeOutSocialUser(bool bCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "FadeOutSocialUser");

	Params::BattlePassScreenReward_C_FadeOutSocialUser Parms{};

	Parms.bCallback = bCallback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.FadeInSocialUser
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenReward_C::FadeInSocialUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "FadeInSocialUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.SetSocialPlayerProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Progress_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::SetSocialPlayerProgress(float Progress_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "SetSocialPlayerProgress");

	Params::BattlePassScreenReward_C_SetSocialPlayerProgress Parms{};

	Parms.Progress_0 = Progress_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.OnLoadSocialIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::OnLoadSocialIcon(bool bSuccess, class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "OnLoadSocialIcon");

	Params::BattlePassScreenReward_C_OnLoadSocialIcon Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.OnSetRotatingReward
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortItem*                        InReward                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHasAdditionalStylesToDisplay                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TSoftObjectPtr<class UTexture2D>        RewardTexture                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// bool                                    bIsFreeItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOwnsBattlePass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SeasonLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::OnSetRotatingReward(class UFortItem* InReward, bool bHasAdditionalStylesToDisplay, const TSoftObjectPtr<class UTexture2D>& RewardTexture, bool bIsFreeItem, bool bOwnsBattlePass, int32 SeasonLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "OnSetRotatingReward");

	Params::BattlePassScreenReward_C_OnSetRotatingReward Parms{};

	Parms.InReward = InReward;
	Parms.bHasAdditionalStylesToDisplay = bHasAdditionalStylesToDisplay;
	Parms.RewardTexture = RewardTexture;
	Parms.bIsFreeItem = bIsFreeItem;
	Parms.bOwnsBattlePass = bOwnsBattlePass;
	Parms.SeasonLevel = SeasonLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.OnRotateReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::OnRotateReward(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "OnRotateReward");

	Params::BattlePassScreenReward_C_OnRotateReward Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "Tick");

	Params::BattlePassScreenReward_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenReward_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenReward_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassScreenReward.BattlePassScreenReward_C.ExecuteUbergraph_BattlePassScreenReward
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattlePassScreenReward_C::ExecuteUbergraph_BattlePassScreenReward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenReward_C", "ExecuteUbergraph_BattlePassScreenReward");

	Params::BattlePassScreenReward_C_ExecuteUbergraph_BattlePassScreenReward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

