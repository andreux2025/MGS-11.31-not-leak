#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmbientAudio

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class AmbientAudio.AmbientAudioDataAsset
// 0x0000 (0x0030 - 0x0030)
class UAmbientAudioDataAsset : public UDataAsset
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AmbientAudioDataAsset">();
	}
	static class UAmbientAudioDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmbientAudioDataAsset>();
	}
};
static_assert(alignof(UAmbientAudioDataAsset) == 0x000008, "Wrong alignment on UAmbientAudioDataAsset");
static_assert(sizeof(UAmbientAudioDataAsset) == 0x000030, "Wrong size on UAmbientAudioDataAsset");

// Class AmbientAudio.AmbientVolume
// 0x0010 (0x0260 - 0x0250)
class AAmbientVolume final : public AVolume
{
public:
	int32                                         Priority;                                          // 0x0250(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAmbientAudioDataAsset*                 AmbientAsset;                                      // 0x0258(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AmbientVolume">();
	}
	static class AAmbientVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmbientVolume>();
	}
};
static_assert(alignof(AAmbientVolume) == 0x000008, "Wrong alignment on AAmbientVolume");
static_assert(sizeof(AAmbientVolume) == 0x000260, "Wrong size on AAmbientVolume");
static_assert(offsetof(AAmbientVolume, Priority) == 0x000250, "Member 'AAmbientVolume::Priority' has a wrong offset!");
static_assert(offsetof(AAmbientVolume, AmbientAsset) == 0x000258, "Member 'AAmbientVolume::AmbientAsset' has a wrong offset!");

}

