#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Creative_Teleport

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GAT_Creative_TriggeredAbility_BuildingActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Creative_Teleport.GA_Creative_Teleport_C
// 0x0018 (0x0A88 - 0x0A70)
class UGA_Creative_Teleport_C final : public UGAT_Creative_TriggeredAbility_BuildingActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Creative_Teleport_C;             // 0x0A70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Creative_Device_Teleporter_C*       Teleporter;                                        // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Creative_Teleport(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Creative_Teleport_C">();
	}
	static class UGA_Creative_Teleport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Creative_Teleport_C>();
	}
};
static_assert(alignof(UGA_Creative_Teleport_C) == 0x000008, "Wrong alignment on UGA_Creative_Teleport_C");
static_assert(sizeof(UGA_Creative_Teleport_C) == 0x000A88, "Wrong size on UGA_Creative_Teleport_C");
static_assert(offsetof(UGA_Creative_Teleport_C, UberGraphFrame_GA_Creative_Teleport_C) == 0x000A70, "Member 'UGA_Creative_Teleport_C::UberGraphFrame_GA_Creative_Teleport_C' has a wrong offset!");
static_assert(offsetof(UGA_Creative_Teleport_C, Teleporter) == 0x000A78, "Member 'UGA_Creative_Teleport_C::Teleporter' has a wrong offset!");
static_assert(offsetof(UGA_Creative_Teleport_C, PlayerPawn) == 0x000A80, "Member 'UGA_Creative_Teleport_C::PlayerPawn' has a wrong offset!");

}

